name: CI/CD - Build or Use Existing Image

on:
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build and push new Docker image?'
        required: true
        default: 'true'

  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      ECR_REPOSITORY: simple-time-service
      IMAGE_TAG: latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔍 Get AWS Account ID
        id: aws-account
        run: |
          echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: 🐳 (Optional) Build and Push Docker Image
        if: github.event.inputs.build_image == 'true'
        run: |
          IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI ./SimpleTimeService
          docker push $IMAGE_URI

      - name: 📦 Set IMAGE_URI from existing image (if skipping build)
        if: github.event.inputs.build_image != 'true'
        run: |
          echo "IMAGE_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_ENV

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: 🧪 Terraform Init
        working-directory: terraform
        run: terraform init

      - name: 🚀 Terraform Apply
        working-directory: terraform
        run: |
          terraform apply -auto-approve -var="container_image_url=${{ env.IMAGE_URI }}"